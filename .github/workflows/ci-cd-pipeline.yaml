name: CI/CD Pipeline - Developer Evaluation

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v3

      - name: Verificar Estrutura de Diretórios
        run: ls -R

      - name: Configurar .NET 8.0 e .NET 9.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - name: Restaurar Dependências
        working-directory: DeveloperStoreAmbev
        run: dotnet restore DeveloperStoreAmbev.sln

      - name: Compilar o Projeto
        working-directory: DeveloperStoreAmbev
        run: dotnet build DeveloperStoreAmbev.sln --no-restore --configuration Release

  docker-build:
    needs: build-test  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v3

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Instalar Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version 

      - name: Iniciar Dependências com Docker Compose
        working-directory: DeveloperStoreAmbev
        run: |
          docker-compose up -d
          echo "Aguardando PostgreSQL e MongoDB inicializarem..."
          sleep 15 

      - name: Construir Imagem Docker
        working-directory: DeveloperStoreAmbev
        run: docker build -t developer-evaluation-api .

      - name: Remover Containers Antigos (Se Existirem)
        run: |
          docker stop developer-evaluation-api || true
          docker rm developer-evaluation-api || true

      - name: Criar Container e Testar API
        working-directory: DeveloperStoreAmbev
        run: |
          echo "Subindo os serviços com Docker Compose..."
          docker-compose up -d
          echo "Aguardando a API iniciar..."
          sleep 30  # Tempo maior para evitar falha na conexão com banco
          echo "Verificando logs da API..."
          docker logs developer_evaluation_api
          echo "Testando conexão com a API..."
          curl --retry 5 --retry-delay 5 --retry-connrefused -X GET http://localhost:8081/api/sales || exit 1

  deploy:
    needs: docker-build  
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Placeholder (Adicione aqui sua estratégia de deploy)
        run: echo "Deploy não implementado. Configure para AWS/Azure/Docker Hub/etc."
