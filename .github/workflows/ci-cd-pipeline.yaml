name: CI/CD Pipeline - Developer Evaluation

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:

  build-test:
      runs-on: ubuntu-latest
      steps:
        - name: 📥 Checkout do Código
          uses: actions/checkout@v3

        - name: 🗂️ Verificar Estrutura de Diretórios
          run: ls -R

        - name: 🔧 Configurar .NET 8.0 e .NET 9.0
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: |
              8.0.x
              9.0.x

        - name: 📦 Restaurar Dependências
          working-directory: DeveloperStoreAmbev
          run: dotnet restore DeveloperStoreAmbev.sln

        - name: 🛠️ Compilar o Projeto
          working-directory: DeveloperStoreAmbev
          run: dotnet build DeveloperStoreAmbev.sln --no-restore --configuration Release

  docker-build:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout do Código
        uses: actions/checkout@v3

      - name: 🐳 Configurar Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🏗️ Construir Imagem Docker
        working-directory: DeveloperStoreAmbev
        run: docker build -t developer-evaluation-api .

      - name: 🚀 Criar Container e Testar API
        run: |
            docker run -d -p 8080:8080 --name developer-evaluation-api developer-evaluation-api
            echo "Aguardando a API iniciar..."
            sleep 30  # Aumentar o tempo de espera
            echo "Verificando se a API está rodando..."
            docker ps  # Mostrar os containers rodando
            curl --retry 5 --retry-delay 5 --retry-connrefused -X GET http://localhost:8080/api/sales || exit 1
            
      - name: 📜 Verificar Logs do Container
        run: docker logs developer-evaluation-api

      - name: 🔗 Iniciar Dependências com Docker Compose
        run: docker-compose up -d


  deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: 🚀 Deploy Placeholder (Adicione aqui sua estratégia de deploy)
        run: echo "Deploy não implementado. Configure para AWS/Azure/Docker Hub/etc."
