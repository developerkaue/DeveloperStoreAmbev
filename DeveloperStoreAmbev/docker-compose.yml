services:
  # ðŸ”¹ Banco de Dados PostgreSQL
  postgres:
    image: postgres:15
    container_name: developer_evaluation_db
    restart: always
    environment:
      POSTGRES_DB: developer_evaluation
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: devpass
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer -d developer_evaluation"]
      interval: 10s
      retries: 5
      start_period: 5s

  # ðŸ”¹ Banco de Dados NoSQL MongoDB
  mongodb:
    image: mongo:6.0
    container_name: developer_evaluation_nosql
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: developer
      MONGO_INITDB_ROOT_PASSWORD: devpass
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  # ðŸ”¹ Redis para cache
  redis:
    image: redis:7.0-alpine
    container_name: developer_evaluation_cache
    restart: always
    command: redis-server --requirepass devpass
    ports:
      - "6379:6379"

  # ðŸ”¹ Nossa aplicaÃ§Ã£o .NET API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: developer_evaluation_api
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Postgres=Host=postgres;Port=5432;Database=developer_evaluation;Username=developer;Password=devpass;
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_started
      redis:
        condition: service_started

volumes:
  pgdata:
  mongodata:
